<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.jason.etl.metadatamanager.web.rest.dao.ExternalSchemaDao">

    <update id="delete">
        update t_etl_metadata_external_schema set copy_name = s_name, s_name = uuid(), status = false where 1=2
        <if test="null != ids and ids.size() > 0">
            or s_id in
            <foreach collection="ids" item="id" index="no" open="("
                     separator="," close=")">
                #{id}
            </foreach>
        </if>
    </update>

    <select id="findSchema" resultMap="SCHEMA_MAP">
        SELECT s_id, platform_id, s_name, s_c_name, created_at, created_by, updated_at
        , updated_by, comments, init_commands, status
        FROM t_etl_metadata_external_schema where s_id = #{id} and status = true;
    </select>

    <resultMap id="SCHEMA_MAP" type="pers.jason.etl.metadatamanager.core.synchronize.external.ExternalSchema">
        <id column="s_id" property="id"/>
        <result column="platform_id" property="platformId"/>
        <result column="s_name" property="name"/>
        <result column="s_c_name" property="cName"/>
        <result column="created_at" property="createdTime"/>
        <result column="created_by" property="creator"/>
        <result column="updated_at" property="updatedTime"/>
        <result column="updated_by" property="updatedBy"/>
        <result column="comments" property="comments"/>
        <result column="init_commands" property="initCommands"/>
        <result column="" property="fullName"/>
    </resultMap>

    <insert id="saveAll" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_etl_metadata_external_schema
        (s_id, platform_id, s_name, s_c_name, created_at, created_by, updated_at, updated_by, comments,
        init_commands, status)
        VALUES
        <foreach collection="list" item="schema" separator=",">
            (
            #{schema.id}, #{schema.platformId}, #{schema.name}, #{schema.cName}, #{schema.createdTime}
            , #{schema.creator}, #{schema.updatedTime}, #{schema.updatedBy}, #{schema.comments}
            , #{schema.initCommands}, #{schema.status}
            )
        </foreach>
    </insert>

</mapper>
